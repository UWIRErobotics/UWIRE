<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head id="ctl00_ctl00_Head1"><title>
	PAGE: 8a4: Connectionism: Spreading Activation
</title>
    <script language="javascript" type="text/javascript">
    var Page = function() { };
    </script>
    
    

<base href="https://uwangel.uwaterloo.ca/AngelUploadsuwangel/Content/UW-MCL-C-090424-153038/_assoc/c3b34124d0b1213d494deb2bf10a0281/"></base>
<link rel="stylesheet" type="text/css" href="/AngelThemes/Stylesheets/Professional.css" /><link rel="stylesheet" type="text/css" href="/AngelThemes/Stylesheets/Professional.css" /><SCRIPT LANGUAGE="JavaScript">if(!run){ document.write('<SCRI' + 'PT LANGUAGE="JavaScript" src="/uwangel/jscript/Localization.js"><\/SCRIPT>'); var run = true; }</SCRIPT><script type="text/javascript" language="javascript" src="/uwangel/InlineEditor/fckeditor.js"></script><script type="text/javascript" language="javascript" src="/uwangel/InlineEditor/inline.asp"></script>

<script language="javascript" type="text/javascript">
<!--//
var gblnRefreshIndex = false;
var gstrAPI = '/uwangel/api/default.asp';
var gstrAngelApp = 'CRSCNT';
var gstrWCI = '';
var gstrWCE = '';
var gstrFinalWCI = '';
var gstrFinalWCE = '';
var gstrScriptURL = 'https://uwangel.uwaterloo.ca/uwangel/section/content/Default.asp?WCU=CRSCNT';
var gstrPostURL = '';
var gstrBaseHref = 'https://uwangel.uwaterloo.ca/AngelUploadsuwangel/Content/UW-MCL-C-090424-153038/_assoc/c3b34124d0b1213d494deb2bf10a0281';
var gstrStylesheet = '/AngelThemes/Stylesheets/default.css';
var glngUserRights = 2;
var gstrUserID = 'jgorchyn';
var gstrSectionID = 'UW-MCL-C-090424-153038';
var gstrRootID = 'ROOT';
var gstrParentID = 'c3b34124d0b1213d494deb2bf10a0083';
var gstrObjectID = 'c3b34124d0b1213d494deb2bf10a0282';
var gstrObjectType = 'PAGE';
var gstrBaseType = 'PAGE';
var gstrEntryID = 'c3b34124d0b1213d494deb2bf10a0281';
var gstrEntrySection = 'UW-MCL-C-090424-153038';
var gstrEntryTitle = '8a4: Connectionism: Spreading Activation';
var gstrBoardID = '';
var gstrBoardTitle = '';
var gstrShortcutID = '';
var gstrShortcuts = '';
var gblnSubmit = true;
var gblnForceSubmitting = false;

//The same variables, but in a hierarchical structure
var LO = (function(){
    var constructor = function(){
    }
    
    return constructor;
})();

LO.API = gstrAPI;
LO.angelApp = gstrAngelApp;
LO.scriptURL = gstrScriptURL;
LO.postURL = '';
LO.baseHref = gstrBaseHref;
LO.stylesheet = gstrStylesheet;
LO.userRights = glngUserRights;
LO.userID = gstrUserID;
LO.sectionID = gstrSectionID;
LO.rootID = gstrRootID;
LO.parentID = gstrParentID;
LO.objectID = gstrObjectID;
LO.objectType = gstrObjectType;
LO.baseType = gstrBaseType;
LO.entryID = gstrEntryID;
LO.entrySection = gstrEntrySection;
LO.entryTitle = gstrEntryTitle;

var LearningObject = LO;

//-->
</script></head>
<body id="c3b34124d0b1213d494deb2bf10a0281" class="bodyLessons cmTypePAGE PGDISPLAY_PAGE PGDISPLAY_PAGE_RESPOND">
    
    


    <form name="aspnetForm" method="post" action="Page.aspx?EntryId=c3b34124d0b1213d494deb2bf10a0281&amp;caller=%2fuwangel%2fsection%2fcontent%2fdefault.asp&amp;WCI=pgDisplay_Object&amp;WCU=CRSCNT&amp;Preview=0" id="aspnetForm">
<div>
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwULLTE2NDYyNDgyNTQPZBYCZg9kFgJmD2QWAgIKD2QWAgIDDw8WAh4HVmlzaWJsZWhkZGQ=" />
</div>


<script src="/uwangel/JScript/HelpPopup.js" type="text/javascript"></script>
<script src="/uwangel/jscript/jsActions.js" type="text/javascript"></script>
        <div class="normalDiv">
            <div class="normalSpan">
                <div id=”subject_image”></div>
                
    

    <div style="margin-top:.7em;width:100%">
        
    </div>

            </div>
        </div>
    

<script type="text/javascript">
//<![CDATA[
issueRedirect((parent && parent.location && parent.frames && parent.frames.length > 0 && parent.frames[0].name == 'lsn_header') ? parent : null);//]]>
</script>
</form>
    
    <div class="normalDiv">
    <div class="normalSpan">    
        
    
    <div id="ActionMessages"></div>
    
    <div class="normalSpan">
        <DIV>
<DIV id=row1>
<H3>8a4: Connectionism: Spreading Activation</H3>
<P>Of course, a single node in a network will typically <STRONG>receive inputs or signals from many other nodes</STRONG> and not just one.&nbsp;So, in order to see how activation gets spread around a network as a result of the operations of individual nodes, we need a model of how a node responds to having many signals sent to it by other nodes.&nbsp;Let us explore the matter by examining the figure below.</P>
<P></P>
<P><IMG alt="" hspace=50 src="/AngelUploadsuwangel/Content/UW-MCL-C-090424-153038/_assoc/c3b34124d0b1213d494deb2bf10a0281/activation.png?4098" border=0></P>
<P>Here, the node Nj is receiving signals from nodes 1&#8230;i.&nbsp;The total signal received by this node is simply <STRONG>the sum of all the individual incoming signals</STRONG>.&nbsp;</P>
<P>The final step is to specify how each node responds to the total of the signals that are being sent to it.&nbsp;That is, we need to specify how the activation level of a node is determined as a result of all the signals sent to the node.&nbsp;This step is accomplished by an <STRONG>activation function</STRONG>.&nbsp;In the case of an artificial neural network, an activation function is simply an equation that determines how much activation results from a given level of input.&nbsp;There are several options, depicted in the figure below.&nbsp;</P>
<P><IMG alt="" hspace=50 src="/AngelUploadsuwangel/Content/UW-MCL-C-090424-153038/_assoc/c3b34124d0b1213d494deb2bf10a0281/function.png?8968" border=0></P>
<P>In each graph in this figure, the horizontal axis represents the level of input (from lower to higher) whereas the vertical axis represents the level of output (from lower to higher), that is, the activation level of a node resulting from the given input.</P>
<OL>
<LI>In the <STRONG>linear function</STRONG>, the activation level of a node is proportional to the strength of the input.&nbsp;In other words, the stronger the input signal, the higher the activation level.&nbsp;</LI>
<LI>In the <STRONG>threshold function</STRONG>, the activation level of a node remains at 0 until some threshold (minimum value) is reached, at which point the node assumes a set activation level.&nbsp;Essentially, such a node is either &#8220;off&#8221; (below threshold input) or &#8220;on&#8221; (above threshold input).</LI>
<LI>In the <STRONG>sigmoid function</STRONG>, the activation level of a node is roughly proportional to its input (as in the linear function) except that is responds little to very weak inputs and levels off in response to extremely strong inputs, i.e., it has a maximum level of activation.</LI></OL>
<P>As Churchland and Sejnowski indicate, the sigmoid (&#8220;s-shaped&#8221;) function reflects the actual behavior of a real neuron.&nbsp;For this reason, among others, the sigmoid function is a popular choice for the activation function of an artificial neural network.</P>
<P>Now that we have a complete description of simplified nodes, networks, and how activation spreads throughout such a network, we can discuss ways in which such networks can be used to simulate human cognitive abilities.</P>
<P align=right>Previous:&nbsp;<A href="/uwangel/section/content/default.asp?WCI=GOTO&amp;TYPE=PAGE&amp;MATCH=8a3%3A%20Connectionism%3A%20Simplified%20Neural%20Networks">Simplified Neural Networks</A>&nbsp;<FONT color=#000000><STRONG>|</STRONG> Next: <A href="/uwangel/section/content/default.asp?WCI=GOTO&amp;TYPE=PAGE&amp;MATCH=8a5%3A%20Connectionism%3A%20Localized%20Networks">Localized Networks</A></FONT></P></DIV></DIV>
    </div>


    
    
    <script  type="text/javascript" language="Javascript">
        setTimeout(function()
                    {
                        if (parent.parent.ANGEL && parent.parent.ANGEL.ui && parent.parent.ANGEL.ui.bc) 
                        { 
                            if(this.parent.name == "AngelContent")
                            {
                                parent.parent.ANGEL.ui.bc.update(this.parent); 
                            }
                            else if(this.name == "AngelContent")
                            {
                                parent.parent.ANGEL.ui.bc.update(this); 
                            }
                        }
                        document.close();
                    }
            ,0);
    </script>

        
                
    </div>
    </div>    
</body>
</html>
