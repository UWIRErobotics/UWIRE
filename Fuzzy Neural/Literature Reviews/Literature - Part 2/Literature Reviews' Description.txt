1) Intelligent Adaptive Mobile Robot Navigation

<<Abstract>>
This paper deals with the application of a neuro-fuzzy inference system to a mobile robot
navigation in an unknown, or partially unknown environment. The final aim of the robot is to reach
some pre-defined goal. For this purpose, a sort of a co-operation between three main sub-modules
is performed. These sub-modules consist in three elementary robot tasks: following a wall, avoiding
an obstacle and running towards the goal. Each module acts as a Sugeno–Takagi fuzzy controller
where the inputs are the different sensor information and the output corresponds to the orientation
of the robot. The rule-base is generated by the controller after some learning process based on a
neural architecture close to that used by Wang and Menger. This leads to adaptive neuro-fuzzy
inference systems (ANFIS) (one for each module). The adaptive navigation system (ANFIS), based
on integrated reactive-cognitive parts, learns and generates the required knowledge for achieving the
desired task. However, the generated rule-base suffers from redundancy and abundance of data, most
of which are less useful. This makes the assignment of a linguistic label to the associated variable difficult
and sometimes counter-intuitive. Consequently, a simplification phase allowing elimination of
redundancy is required. For this purpose, an algorithm based on the class of fuzzy c-means algorithm
introduced by Bezdek and we have developed an inclusion structure. Experimental results confirm
the meaningfulness of the elaborated methodology when dealing with navigation of a mobile robot
in unknown, or partially unknown environment.

<<Description>>
~ For controlling mobile robot system, focus on local control/ behavioural strategies (which does not require 
global map of the environment but only sensor information be used; robot motion decision is made by considering the up
to date status of the robt and the relationships with its environment; ability to handle the changing aspect of the
environment because the structural modelling of the environment is not necessary; particular interest focuses in 
fuzzy control strategy.) --> a method of interpreting and implementing the linguistic rules pertaining to the process 
control strategy. Each rule defines a relationship between fuzzy input(s) and fuzzy output(s).
~ Three controllers are considered: wall following (in the left or right side), obstacle avoiding and running towards
the goal.
~ Purely fuzzy system: the parameters do not appear in an analytical way, therefore, can not be applied for learning
and tuning fuzzy rules.
~ Neural networks: can produce mapping rules from empirical training set through learning, but the mapping rules in the
network are not visible and are difficult to understand.
~ May be useful to combine both aspects
~ General architecture of the controllers based on neuro-fuzzy system:
	~ 3 main controllers: wall following, obstacle avoidance and running towards the goal
	~ Each controller has as inputs the ultrasonic measurements provided by robot sensors.
		~ 3 measurements: d1, frontal; d2, left; d3, right sensor with respect to robot configuration
	~ Output corresponds to the orientation angle of the controller with respect to the robot axis 
	  (Velocity of robot, when moving, is supposed to be constant.)
	~ An Adaptive Neuro-Fuzzy Inference System (ANFIS) paradigm is used as architecture of each controller, which permits
	to adaptively determine the required action based on the integrated reactive-cognitive parts.
		~ Controller design procedure is divided into two main phases:
			~ (1) An off-line learning experiment determines the membership functions and the rule-base; backpropagation
			through time (BPTT) algorithm is developed to train each controller. A fuzzy clustering based on inclusion
			structure is then used to simplify the generated rule base. This simplification occurs in the sense that
			similar membership functions pertaining to the premises of the fuzzy rule-base are merged. Provides 
			nonredundant membership functions to which meaningful linguistic labels are attached. Reduction of the total
			numbers of fuzzy sets is needed to consitute the model, improving the semantic interpretation and reduces the
			demand in memory for implementation context.
			~ (2) Controller parameters are optimized on-line. A Real Time Recurrent Learning (RTRL) algorithm is 
			developed for on-line adapting and updating the membership functions and the rule-base of each controller.
	~ ANFIS Design and Configuration Methodology:
		~ Takagi and Sugeno have proposed a fuzzy system where consequent part(s) of the rules are a linear combination
		of the input variables; identification methods are applied to estimate "THEN" part of the paremeters.
		~ Wang and Mendel have proposed a fuzzy logic system with Gaussian membership function: ((See Equation 1)).
		~ Inference system uses the arithmetic product as t-norm and COG (center of area or center of gravity) method
		for defuzzifcation. Feedforward neural networks with three layers: fuzzification layer, inference layer and
		defuzzification layer.
	~ Off-line Training:
		~ See definition (Equation 3) of a utility or an objective function that evaluates the performance of each 
		controller, which uses relative distance values obtained from sensor signals.
~ Simplification of the Base-Rule:
	~ Motivation and Methodology:
		~ There is a considerable overlapping among membership functions; many of these functions are approximately 
		similar and have a high degree of overlapping. This induces a redundancy in the rule-base and makes a linguistic
		description of the system difficult. It is desirable to merge similar membership functions to reduce redandancy
		and improve semantic interpretation of the rules. Therefore use an approach based on fuzzy clustering method.
~ Conclusion:
	~ Adaptive navigation of a mobile robot in an unknown environment by using many Adaptive Neuro-Fuzzy Inference System
	(ANFIS) is discussed (it learns and generates the required knowledge for achieving desired goals using two different
	phases: configuration phase and the real time implementation phase.
	~ BPTT is extended for an ANFIS. BPTT generates and optimizes the rule-bause without any prior knowledge about the 
	behaviour that robot may exhibit. In the ANFIS, linguistic terms related to each sensory information represent both
	the fuzziness in decision and sensory information. This methodology of neural network has an ability to accept, 
	enhance and express the acquired knowledge from the human or training algorithm in the form of fuzzy inference rules.
	~ After learning, all obtained rules were studied and it was observed that some membership functions disappeared from
	the universe of discourse since they overlap to a large extent with other membership functions. A fuzzy clustering
	based on inclusion concept is used to simply the rule-base and to remove useless membership functions and rules before
	real time implementation. Also, a procedure for dealing with conflictual situations as a matter of the consequent parts
	of the rule(s) is pointed out.
	~ The RTRL (Real Time Recurrent Learning) has demonstrated the real-time adoption capability of the ANFIS to control  
	the steering of a mobile robot to follow a wall and avoid obstacles after it inherits the set of parameters, learned 
	in the configuration phase. Experience has shown that at end of first phase, the robot can not perfectly perform the 
	desired behaviour in an unknown environment, when it was randomly initialized, due mainly to the poverty and 
	sometimes conflictual information issued from the ultrasonic sensors. Finally, the experimental results confirm that 
	the employed methodology works well for mobile robot navigation in an unknown environment. The navigation procedure 
	seems very similar to human behaviour armed with only the three basic BVGAs, i.e., avoiding obstacle, following a 
	wall and runing towards a goal, and with poor perception capability (like a blind person). Future works will deal 
	with adaptive determination of the number of cluster needed to achieve the clustering process as an improvement of 
	the procedure of the consequent parts of the rules.

============================================================================================================================
		
2) Modelling, COntrol, and Stability Analysis of Non-Linear Systems Using Generalized Fuzzy Neural Networks

<<Abstract>>
This paper presents an adaptive fuzzy neural controller (AFNC) suitable for modelling
and control of MIMO non-linear dynamic systems. The proposed AFNC has the
following salient features: (1) fuzzy neural control rules can be generated or deleted
dynamically and automatically; (2) uncertain MIMO non-linear systems can be
adaptively modelled on line; (3) adaptation and learning speed is fast; (4) expert
knowledge can be easily incorporated into the system; (5) the structure and parameters
of the AFNC can be self-adaptive in the presence of uncertainties to maintain a high
control performance; and (6) the asymptotical stability of the system is established
using the Lyapunov approach. Simulation studies on a two-link robot manipulator
show that the performance of the proposed controller is better than that of some
existing fuzzy/neural methods.

<<Description>>
~ Investigate a new structure and parameter learning algorithm for constructing a fuzzy or neural control system 
systematically and automatically. Resulting intelligent controller must have a fast on-line adaptability to guarantee
good real-time control performance. A superior adaptive fuzzy neural controller (AFNC) is also designed and developed.
The proposed AFNC is built based on a generalized fuzzy neural network (G-FNN). The G-FNN algorithm offers a fast on-line
learning algorithm, which can recruit or delete fuzzy control rules or neurons dynamically without predefintion. The 
G-FNN algorithm enables the G-NN controller to successfully model the non-linear system dynamics and its uncertainties
online.
~ MIMO non-linear system dynamics
	~ See Equation (1) and the assumption
~ Fuzzy neural modelling scheme:
	~ Characteristics of G-FNN: dynamic fuzzy neural structure; fast on-line adaptation and learning ability; and
	ease of incorporating expert knowledge. Can serve as a generalized FNN for system modelling and control.
	~ Using G-FNN directly for non-linear control, the G-FNN is viewed as a means of system modelling, or even a 
	framework for knowledge representation. Knowledge about system dynamics and mapping characteristics are implicitly
	stored within the network. Important to train G-FNN using input-output data from a non-linear system.
	~ G-Fnn architecture:
		~ G-FNN has a total of four layers. Layer one transmit values of the input linguistic variables to the
		next layer directly. Layer two performs membership functions to the input variables. The membership
		function is chosen as a Gaussian function ((See Equation 2)). Layer three is the rule layer. The number 
		of nodes (or neurons) in this layer indicates the number of fuzzy rules. Layer four nodes output linguistic
		variables. Each output variable is the weighted sum of incoming signals, which performs the TSK-type 
		defuzzification.
	~ G-FNN algorithm: on-line supervised structure and parameter learning algorithm which constructs the FNN 
	automatically and dynamically. Parameters learning is performed by combining the semi-closed fuzzy set concept for
	the membership learning and the linear least-squared (LLS) method for weight learning. For structure learning, two 
	criteria are proposed for generation of fuzzy rules, and an error reduction ratio (ERR) concept is proposed for
	pruning rules.
	~ Inverse modelling using G-FNN: ((See paper))
~ Fuzzy neural control scheme:
	~ Adaptive fuzzy neural controller (AFNC): ((See paper))
	~ Convergence analysis of AFNC: ((See paper))
	~ Stability analysis of AFNC: ((See paper))
~ Conclusions:
	~ An adaptive fuzzy neural modelling and control scheme for non-linear systems was proposed, and its adaptive
	capability to handle modelling errors and external disturbances was demonstrated. The error convergence rate with
	the AFNC was found to be fast. Asymptotic stability of the control system is established using the Lyapunov 
	approach. Computer simulation studies of a two-link robot manipulator verify the flexibility, adaptation, and 
	tracking performance of the proposed AFNC.

============================================================================================================================

3) Intelligent Mobile Manipulator Navigation Using Adaptive Neuro-Fuzzy Systems

<<Abstract>>
The work presented in this paper deals with the problem of autonomous and intelligent
navigation of mobile manipulator, where the unavailability of a complete mathematical
model of robot systems and uncertainties of sensor data make the used of
approximate reasoning to the design of autonomous motion control very attractive.

A modular fuzzy navigation method in changing and dynamic unstructured environments
has been developed. For a manipulator arm, we apply the robust adaptive fuzzy
reactive motion planning developed in [J.B. Mbede, X. Huang, M. Wang, Robust
neuro-fuzzy sensor-based motion control among dynamic obstacles for robot manipulators, 
IEEE Transactions on Fuzzy Systems 11 (2) (2003) 249–261]. But for the vehicle
platform, we combine the advantages of probabilistic roadmap as global planner and
fuzzy reactive based on idea of elastic band. This fuzzy local planner based on a computational
efficient processing scheme maintains a permanent flexible path between two
nodes in network generated by a probabilistic roadmap approach. In order to consider
the compatibility of stabilization, mobilization and manipulation, we add the input of
system stability in vehicle fuzzy navigation so that the mobile manipulator can avoid
stably unknown and/or dynamic obstacles. The purpose of an integration of robust controller
and modified Elman neural network (MENN) is to deal with uncertainties, which
can be translated in the output membership functions of fuzzy systems.

============================================================================================================================

4) Hierarchical Fuzzy Control For Autonomous Navigation of Wheeled Robots

<<Abstract>>
The autonomous navigation wheeled robots (WR) requires integrated kinematic and
dynamic control to perform trajectory tracking, path following and stabilisation. Considering a WR
is a nonholonomic dynamic system with intrinsic nonlinearity, unmodelled disturbance and
unstructured unmodelled dynamics, fuzzy logic system based control is appropriate and practical.
However, the multivariable control structure of the WR results in the curse of dimensionality of the
fuzzy design and prevents a domain expert from building the linguistic rules for autonomous
navigation. Hierarchical fuzzy design decomposes the controller into three low-dimensionality
fuzzy systems: fuzzy steering, fuzzy linear velocity control and fuzzy angular velocity control, so
that manual construction of each rule base becomes feasible and easy. The proposed design enables
a WR to perform position control in trajectory tracking and velocity profile tracking in continuous
drive. The coupling effect between linear and angular motion dynamics is considered in the fuzzy
steering by building appropriate linguistic rules. To facilitate the autonomous navigation design and
verification, a prototype and the model of a kind of WR have been developed, and equipped with the
hierarchical fuzzy control system. The simulation and experimental results are shown and
compared.

<<Description>>
~ Wheeled robot (WR) is a kind of nonholonomic dynamic system with intrinsic non-
linearity, and commonly with unmodelled disturbance and unstructured unmodelled 
dynamics; requires integrated kinematic and dynamic control. 
~ Nonholonomic WR has contraints imposed on the motion that are not integrable and,
as a result, cannot be stabilised by smooth, static feedback controls. Therefore, 
techniques of discontinuous feedback control, dynamic feedback linearisation, sliding
mode control and fuzzy/neural control have been studied to solve stabilisation, 
trajectory tracking and the robust control problems of WRs. Integrated kinematic and
dynamic control of a WR for autonomous navigation is a multivariable case, so manual
construction of the fuzzy rule base becomes difficult or even impossible. 
Solution: adaptive/self-organized fuzzy design has potential due to its capability
to build a complicated fuzzy system automatically through an off- or on-line learning
procedure. BUT fuzzy control design based on manual construction of linguistic rules
is simple and practical only for low-dimensionality systems. To obtain low-dimensional
fuzzy controllers, the 4-to-2 (input-to-output) position controller of a light WR was
divided into two 2-to-1 fuzzy controllers by assuming linear (tangential) and angular
motion dynamics being decoupled. Hierarchical fuzzy control attempts to decompose an 
overall controller into a combination of several sub-controllers so that each sub-
controller can be realised with a low-dimensional fuzzy system and as a result, manual
construction of each rule base becomes easy --> method receives advantages of low
dimensionality and easy implementation. 
~ The WR controller is decomposed into three subsystems: fuzzy steering, fuzzy linear
velocity control and fuzzy angular velocity control. The fuzzy steering consists of 
two 2-to-1 fuzzy mappings to generate desired linear and angular velocities and,
in addition, considers the coupling effect between the linear and angular motion
dynamics. The fuzzy linear and angular velocity control are each composed of a 2-to-1 
fuzzy mapping to produce signals for driving the motors. Each of the fuzzy mappings 
takes input and output quantities with physical meaning so that a skilled expert can 
easily extract linguistic rules from his experience. To facilitate the autonomous 
navigation design and verification, a prototype and the model of a kind of WR have 
been developed and equipped with the hierarchical fuzzy control system. The
simulation and experimental results in performing autonomous navigation are shown 
and compared.
~ Conclusions:
	~ A hierarchical fuzzy structure of integrated kinematic and dynamic control
	has been developed for autonomous navigation of a kind of wheeled robot (WR).
	This sructure facilitates the fuzzy controller design by combining several 
	low-dimensionality fuzzy systems so that the manual construction of each 
	rule base becomes eawsy. For a WR driven by two rear wheels, the fuzzy steering
	is designed to  consist of two 2-to-1 fuzzy mappings and takes the coupling 
	effect between linear and angular motion dynamics into consideration. The fuzzy
	dynamica controller is composed of a proportional-fuzzy angular velocity 
	controller. Each of them has a 2-to-1 fuzzy mapping to produce driving signals.
	The stability and performance of the overal design have been verified both
	by computer simulation and experiment. In the computer simulation, the WR is 
	considered as a nonholonomic dynamic system and using the Lagrange formalism
	its mathematical model has been built. In the experiment, a computer controlled,
	motorised prototype has been implemented. Equipped with the hierarchical fuzzy
	controller, the prototype has been tested for various cases of autonomous
	navigation. The consistency demonstrated by the simulation and experimental
	results has verified the model and confirmed the heirarchical fuzzy control
	design. Future works may integrate some environmental sensors into the 
	hierarchical fuzzy control system to achieve complete fuzzy autonomous 
	navigation.

============================================================================================================================

5) A Fuzzy-Based Reactive Controller for a Non-Holonomic Mobile Robot

<<Abstract>>
This paper presents the theoretical development of a complete navigation problem of an autonomous mobile robot. The
situation for which the vehicle tries to reach the endpoint is treated using a fuzzy logic controller. The problem of 
extracting the optimized IF–THEN rule base is solved using an evolutionary algorithm. A new approach based on fuzzy 
concepts is presented in this paper to avoid any collision with the surrounding environment when this latter becomes 
relatively complex. Simulation results show that the designed fuzzy controller achieves effectively any movement control 
of the vehicle from its current position to its end motion and without any collision.

<<Description>>
~ Objective is to show how to guide an autonomous mobile robot in an unknown environment using a fuzzy logic controller.
Its main components are an inference engine and a set of linguistic IF-THEN rules that encode the behaviour of the mobile
robot. Main difficulty in designing a fuzzy logic controller is the efficient formulation of the fuzzy IF-THEN rules.
~ An evolutionary programming technique is proposed to design fuzzy logic control rules and seeks the optimal values of the 
consequent parts in order to drive an autonomous mobile robot from any position in the workspace to its final end point 
without any deviation.
~ A real time efficient method inspired from the potential field method and which uses the fuzzy principles to navigate
an autonomous robot in an unknown environment is proposed: "fuzzy image method". Only one rule base is used for both
navigation behaviour and collision avoidance behaviour. The rules are optimized using an evolutionary algorithm.

============================================================================================================================

6) Neural Network and Fuzzy Logic Techniques Based Collision Avoidance for a Mobile Robot

<<Abstract>>
This paper is concerned with a mobile robot reactive navigation in an unknown cluttered environment based on neural network 
and fuzzy logic. Reactive navigation is a mapping between sensory data and commands without planning. This article’s task is 
to provide a steering command letting a mobile robot avoid a collision with obstacles. In this paper, the authors explain how 
to perform a currently perceptual space partitioning for a mobile robot by the use of an ART neural network, and then, how 
to build a 3-dimensional fuzzy controller for mobile robot reactive navigation. The results presented, whether experimented 
or simulation, show that our method is well adapted to this type of problem.

<<Description>>
~ Reactive navigation is a mapping between sensory data and commands, without planning; task is to provide a steering 
command letting a mobile robot reach a goal while avoiding collision with obstacles in an uknown environment. 
~ Classical approach: potential field method
	~ A mobile robot travels in a field of imaginary forces generated by obstacles (repulsion) and by a goal (attraction).
	~ Mapping function calculates a cumulative effect of all of those forces and chooses a locomotion command.
	~ Has its inherent limitations as local minima and oscillations.
~ Another approach: occupancy grid method
	~ Based on sensory oriented raster model of obstacles configuration.
	~ Avoidance algorithm checks the occupency of rasters belonging to the area of the next planned movement.
~ Another approach to reactive navigation: fuzzy logic
	~ For a mobile robot to navigate autonomatically in an unknown and clustered environment: identify and classify 
	mobile robot's currently perceptual space based on multi-sensors information.
~ Chosen approach: 
	~ First build classifier for the perceptual space identification and classification based on an ART neural network
	~ Then use fuzzy logic technique to achieve mobile robot autonomous obstacle avoidance in an unknown environment.
~ Perceptual Space Identification and Classification
	~ Perprocessor of multi-sensors information
		~ Experimental mobile robot used is a TIT-1 model mobile robot, equipped with a pair of front castors and a 
		pair of rear co-axial drive wheels. Each drive wheels is independently driven by a DC motor, energized 
		by a control voltage.
		~ Use a set of ultrasonic sensors to perceive the currently environment of mobile robot. During robot 
		movement, at every time t, we have some distances values available between the robot and the different obstacles.
		~ To improve mobile robot's real-time obstacles avoidance ability, some preprocessing is necessary to reduce the
		amount of data, sensors are classified into three groups: front, left, and right; for each group, take the
		smallest depth measure.
		~ Preprocessor has another function: the multi-sensors information feature extraction. The feature extraction
		is implemented in software, which includes two functions: (1) extract the feature value of sensors with time
		interval, the interval can be determined based on the robot's velocity; (2) check the extraction of features
		values within a short time interval, so that out-side disturbances are eliminated.
	~ Perceptual space identification and classification based on ART neural network
		~ Chose to use an ART-2 neural network to partition a perceptual space based on three inputs information of 
		ultrasonic sensors.
		~ ART algorithms are relatively fast, due to competitive activation and competitive adaption rules
		~ ART-2 neural network's inputs can be arbitrarily analogy vectors; it consists of the feature field, the
		category field, the two short term memory and the long term memory between the two fields. 
		~ Various types of actual environment which are perceived by mobile robot must be covered by the categories
		which are partitioned by the classifier based on multi-sensors information, which means that at least one category
		must have a non-zero activation for each perceptual space.
		~ The training patterns set should store all the feature of possible perceptual space based on sensors distribution.
~ 3-D Fuzzy Controller
	~ three controlling inputs, that are the categoty of the perceptual space, the smallest distance between mobile robot and a 
	category of the perceptual space and mobile robot's velocity, two controlling outputs, that are the mobile robot's steering
	orientation and its acceleration.
~ Conclusions:
	~ Robot was capable of rudimentary collision avoidance limited by the lack of steering angle feedback, after trial 
	runs of the robot in an indoor unknown environment.
	~ By use of perceptual space identification method, the robot can quickly and accurately identify and partition the
	currently perceptual space based on three groups sensors information.
	~ Taking the category of the perceptual space, the nearest distance between the robot and obstacles and the traversing
	velocity of the robot as inputs, we designed a three-dimensions fuzzy controller, and achieved a collision-free 
	traversing of the mobile robot in an unknown environment.
	~ Utilizes a neural network technique to identify and partition the space and then utililzes a fuzzy logic technique
	to establish a fuzzy controller for obstacle avoidance. 

============================================================================================================================

7) Intelligent Car Parking Using Fuzzy-Neural Networks

<<Abstract>>
This paper analyzes the performance and practical implementation of fuzzy-neural networks for the autonomous motion of mobile 
robots. The designed fuzzy-neural controller is a refined version of a conventional fuzzy controller, and was trained to 
optimize a given cost function minimizing positioning error. It was found that the mobile robot with fuzzy-neural controller 
presents good positioning and tracking performance for different types of desired trajectories. It was verified by computer 
simulation as well as experimentally using a laboratory-scale car-like robot model.

============================================================================================================================

8) Combining Fuzzy Logic and Neural Networks to Control an Autonomous Vehicle

<<Abstract>>
In this paper we present an approach to design a controller that enables a simulated car to drive autonomously around
a race track. The input to the controller is the current speed of the car and several sensor signals indicating the 
properties of the race track. And as its output the controller is supposed to determine the car's change of direction
and its change of speed in response to the information received. The basic idea of our proposal is to let a fuzzy
controller supply the training data for a backpropagation neural network and use the trained network to drive the 
car on an unknown race track. The implementation of the proposal is described and the driving performance of the 
car is evaluated. The results indicate that the combined neural/fuzzy approach is superior to solutions where either
the fuzzy controller or the neural network alone are used to drive the car.

<<Description>>
~ Present an approach to the problem of controlling a car to drive autonomously around an unknown race track; car is 
simulated in software, assumed to be equipped with a number of sensors pointing at different directions in order to view
the road conditions. Information delivered by sensors and current speed of car is used to determine its change of direction
and speed. 
~ Train a neural network on several, differently structured race tracks and then evaluate its driving behaviour on an
unknown race track. 
~ The fuzzy controller acts as a training preprocessor to the  neural network, in contrast to other combined neural/fuzzy
proposals, where the neural units consider the incoming signals as fuzzy sets and process them according to the mechanisms
employed in fuzzy theory.
~ Training data for neural network is obtained by letting the fuzzy controller drive the car around several sample tracks.
Fuzzy controller successively receives input vectors, suitably preprocessed and transformed into fuzzy sets, and processes 
each of them individually by applying its fuzzy rules, operators and inference strategy to determine what the car should do
in response to the input. The fuzzy controller is internally divided into two parts which operate on different rule bases:
one for the steering and the other for the acceleration.
~ Input/Output pairs obtained on the various race tracks are stored and the neural network is then put in charge of driving
the car; trained with back-propagation algorithm on the data set created by the fuzzy controller until it has learned the
output actions determined by the fuzzy controller. The trained network is then used to drive the car around an unknown 
race track.
~ Fuzzy Controller:
	~ based on the standard procedure of developing a rule base containing fuzzy if-then rules, defining linguistic 
	variables and using defuzzification heuristics. A linguistic variable can adopt different values; each of these is
	a fuzzy set which is used to represent a particular interval within the range of possible values for the linguistic
	variable considered. 
	~ fuzzy sets for input parameter "speed" (ISP): divide the range of possible speed values into suitably sized 
	intervals
	~ determine the linguistic variables and their values for the sensors: 
		~ Five directions: direction front left (DFL); direction front middle (DFM); direction front right (DFR);
		direction side left (DSL); and direction side right (DSR). The sensors pointing to a particular direction
		return integer values from a range of numbers to indicate what they see on the track, each of them being
		responsible for a particular distance in that direction. This distance is the second linguistic variable
		used; two linguistic variables: frontal distance (FDI) and side distance (SDI). Fuzzy sets for these: 
		touch; accidental; critical/normal; far; and infinite.
		~ Fuzzy controller has to calculate for each rule contained in the rule base the degree to which the rule
		in discussion is satisfied. The fuzzy controller matches the membership function of the inputs with the
		linguistic values present in the rule; achieved by applying a fuzzy-AND operator to the AND-terms of the 
		rule, which in the design is the standard minimum operator.
		~ Resulting match value is used to compute inference result. Method is used to determine minimum between
		the match value and the result of the rule. The fuzzy sets originating from the inference computation are
		then used to determine the final result. A fuzzy-OR operator, realized by the maximum operator, is applied
		to all fuzzy set which is transformed into a particular crisp value (defuzzification) by computing the 
		center of the area below the membership function.
~ Neural Network:
	~ used a standard three-layer feedforward architecture, where the input layer consist of 31 neural units (one for 
	each of the 30 sensors and one for the current speed of the car), and the output layer has two units to determine
	the change of direction and the change of speed, respectively.
	~ Number os units in the hidden layer has been determined empirically. Backpropagation algorithm with the momentum
	term ((see paper for equations)) is used for training the network. The network outputs are converted to the ranges
	adopted for the change of speed and the change of direction.
	~ For competing against another car, we must determine the sensor which has detected the opponent car and check 
	whether the nearby sensors signal the left or right border of the lane; the opponent's car is then treated like a
	border.
~Conclusions:
	~ Implemented both the fuzzy controller and the neural network and have evaluated the driving performance obtained  
	on several unknown race tracks simulated on an IBM-PC. Results have shown that the combined approach is superior to
	solutions where either the fuzzy controller or the network alone were used to drive the car. 

============================================================================================================================

9) Heuristic Fuzzy-Neuro Network and its Application to Reactive Navigation of a Mobile Robot

<<Abstract>>
A novel pattern recognition approach to reactive navigation of a mobile robot is presented in this paper. A heuristic fuzzy-
neuro network is developed for pattern-mapping between quantized ultrasonic sensory data and velocity commands to the
robot. The design goal was to enable an autonomous mobile robot to navigate safely and effciently to a target position in a
previously unknown environment. Useful heuristic rules were combined with the fuzzy Kohonen clustering network (FKCN)
to build the desired mapping between perception and motion. This method provides much faster response to unexpected
events and is less sensitive to sensor misreading than conventional approaches. It allows continuous, fast motion of the
mobile robot without any need to stop for obstacles. The effectiveness of the proposed method is demonstrated in a series
of practical tests on our experimental mobile robot.